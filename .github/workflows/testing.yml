name: Integration

on:
  push:
    branches: [ main, debugtxt ]
  pull_request:
    branches: [ main, debugtxt ]

jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose and dig
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose dnsutils

      - name: Start docker-compose.dev.yml
        run: |
          sudo docker-compose -f docker-compose.dev.yml up -d

      - name: Wait for coredns_gslb to be ready
        run: |
          for i in {1..30}; do
            dig -p 8053 @127.0.0.1 webapp.app-x.gslb.example.com +short | grep -q '172.16.0.10' && exit 0
            sleep 2
          done
          echo "coredns_gslb did not become ready in time" >&2
          sudo docker-compose -f docker-compose.dev.yml logs
          exit 1

      - name: Check initial dig (should be 172.16.0.10)
        run: |
          ip=$(dig -p 8053 @127.0.0.1 webapp.app-x.gslb.example.com +short)
          echo "Got IP: $ip"
          [ "$ip" = "172.16.0.10" ] || (echo "Expected 172.16.0.10, got $ip" && exit 1)

      - name: Stop webapp10
        run: sudo docker-compose -f docker-compose.dev.yml stop webapp10

      - name: Wait for healthcheck to update (15s)
        run: sleep 15

      - name: Check dig after webapp10 stopped (should be 172.16.0.11)
        run: |
          ip=$(dig -p 8053 @127.0.0.1 webapp.app-x.gslb.example.com +short)
          echo "Got IP: $ip"
          [ "$ip" = "172.16.0.11" ] || (echo "Expected 172.16.0.11, got $ip" && exit 1)

      - name: Restart webapp10
        run: sudo docker-compose -f docker-compose.dev.yml start webapp10

      - name: Wait for healthcheck to update (15s)
        run: sleep 15

      - name: Check dig after webapp10 restarted (should be 172.16.0.10)
        run: |
          ip=$(dig -p 8053 @127.0.0.1 webapp.app-x.gslb.example.com +short)
          echo "Got IP: $ip"
          [ "$ip" = "172.16.0.10" ] || (echo "Expected 172.16.0.10, got $ip" && exit 1)

      - name: Show docker-compose logs on failure
        if: failure()
        run: sudo docker-compose -f docker-compose.dev.yml logs

      - name: Tear down
        if: always()
        run: sudo docker-compose -f docker-compose.dev.yml down -v  